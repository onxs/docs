<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Hugo</title><link>https://gohugo.io/categories/getting-started/</link><description>Recent content in Getting Started on Hugo</description><generator>Hugo</generator><language>en</language><atom:link href="https://gohugo.io/categories/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick start</title><link>https://gohugo.io/getting-started/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/quick-start/</guid><description>In this tutorial you will:
Create a site Add content Configure the site Publish the site Prerequisites Before you begin this tutorial you must:
Install Hugo (extended edition, v0.112.0 or later) Install Git You must also be comfortable working from the command line.
Create a site Commands If you are a Windows user:
Do not use the Command Prompt Do not use Windows PowerShell Run these commands from PowerShell or a Linux terminal such as WSL or Git Bash PowerShell and Windows PowerShell are different applications.</description></item><item><title>Basic usage</title><link>https://gohugo.io/getting-started/usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/usage/</guid><description>Test your installation After installing Hugo, test your installation by running:
hugo version You should see something like:
hugo v0.123.0-3c8a4713908e48e6523f058ca126710397aa4ed5+extended linux/amd64 BuildDate=2024-02-19T16:32:38Z VendorInfo=gohugoio Display available commands To see a list of the available commands and flags:
hugo help To get help with a subcommand, use the --help flag. For example:
hugo server --help Build your site To build your site, cd into your project directory and run:
hugo The hugo command builds your site, publishing the files to the public directory.</description></item><item><title>Directory structure</title><link>https://gohugo.io/getting-started/directory-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/directory-structure/</guid><description>Site skeleton Hugo generates a project skeleton when you create a new site. For example, this command:
hugo new site my-site Creates this directory structure:
my-site/ ├── archetypes/ │ └── default.md ├── assets/ ├── content/ ├── data/ ├── i18n/ ├── layouts/ ├── static/ ├── themes/ └── hugo.toml &amp;lt;-- site configuration Depending on requirements, you may wish to organize your site configuration into subdirectories:
my-site/ ├── archetypes/ │ └── default.md ├── assets/ ├── config/ &amp;lt;-- site configuration │ └── _default/ │ └── hugo.</description></item><item><title>Configure Hugo</title><link>https://gohugo.io/getting-started/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/configuration/</guid><description>Configuration file Create a site configuration file in the root of your project directory, naming it hugo.toml, hugo.yaml, or hugo.json, with that order of precedence.
my-project/ └── hugo.toml With v0.109.0 and earlier the basename of the site configuration file was config instead of hugo. You can use either, but should transition to the new naming convention when practical.
A simple example:
hugo. yaml &amp;nbsp; toml &amp;nbsp; json &amp;nbsp; baseURL: https://example.org/ languageCode: en-us params: contact: email: info@example.</description></item><item><title>Configure markup</title><link>https://gohugo.io/getting-started/configuration-markup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/configuration-markup/</guid><description>Default handler Hugo uses Goldmark to render Markdown to HTML.
hugo. yaml &amp;nbsp; toml &amp;nbsp; json &amp;nbsp; markup: defaultMarkdownHandler: goldmark [markup] defaultMarkdownHandler = &amp;#39;goldmark&amp;#39; { &amp;#34;markup&amp;#34;: { &amp;#34;defaultMarkdownHandler&amp;#34;: &amp;#34;goldmark&amp;#34; } } Files with the .md or .markdown extension are processed as Markdown, provided that you have not specified a different content format using the markup field in front matter.
To use a different renderer for Markdown files, specify one of asciidocext, org, pandoc, or rst in your site configuration.</description></item><item><title>Glossary of terms</title><link>https://gohugo.io/getting-started/glossary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/glossary/</guid><description>A B C D E F G H I K L M N O P R S T U V W Z action See template action.
archetype A template for new content. See details.
argument A scalar, array, slice, map, or object passed to a function, method, or shortcode.
array A numbered sequence of elements. Unlike Go&amp;rsquo;s slice data type, an array has a fixed length. Elements within an array can be scalars, slices, maps, pages, or other arrays.</description></item><item><title>External learning resources</title><link>https://gohugo.io/getting-started/external-learning-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gohugo.io/getting-started/external-learning-resources/</guid><description>Books Hugo In Action Hugo in Action is a step-by-step guide to using Hugo to create static websites. Working with a complete example website and source code samples, you&amp;rsquo;ll learn how to build and host a low-maintenance, high-performance site that will wow your users and stay stable without relying on a third-party server.
Author: Atishay Jain
Publisher: Manning Publications
Publication date: March 2022
Length: 488 pages
ISBN: 9781617297007
Build Websites with Hugo In this book, you&amp;rsquo;ll use Hugo to build a personal portfolio site that you can use to showcase your skills and thoughts to the world.</description></item></channel></rss>